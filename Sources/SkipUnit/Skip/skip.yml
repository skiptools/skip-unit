# skip.tools per-configuration file

#skip:
#  package: 'skip.unit'

# the blocks to add to the settings.gradle.kts
settings:
  header: |
    // This is the top-level Gradle settings generated for the Skip project.
    // The module dependencies it contains may be symbolic links to peer folders.
    //
    // This file is generated by the Skip transpiler plugin and is
    // derived from the aggregate Skip/skip.yml files from the SPM project.
    // Edits made directly to this file will be lost.
    //
    // Open with External Editor to build and run this project in an IDE.
    //
  contents:
    - block: 'pluginManagement'
      contents:
        - block: 'repositories'
          contents:
            - 'gradlePluginPortal()'
            - 'mavenCentral()'
            - 'google()'

    - block: 'dependencyResolutionManagement'
      contents:
        - block: 'repositories'
          contents:
            - 'mavenCentral()'
            - 'google()'

        # constants for the version dependencies
        - block: 'versionCatalogs'
          contents:
            - block: 'create("libs")'
              contents:
                - 'version("jvm", "17")'
                - 'version("android-sdk-min", "29")'
                - 'version("android-sdk-compile", "35")'

                - 'version("android-gradle-plugin", "8.10.1")'
                - 'plugin("android-library", "com.android.library").versionRef("android-gradle-plugin")'
                - 'plugin("android-application", "com.android.application").versionRef("android-gradle-plugin")'

                - 'version("kotlin", "2.0.0")'
                - 'plugin("kotlin-android", "org.jetbrains.kotlin.android").versionRef("kotlin")'
                - 'plugin("kotlin-compose", "org.jetbrains.kotlin.plugin.compose").versionRef("kotlin")'
                - 'library("kotlin-bom", "org.jetbrains.kotlin", "kotlin-bom").versionRef("kotlin")'

                - 'version("kotlin-coroutines", "1.10.2")'
                - 'library("kotlinx-coroutines-core", "org.jetbrains.kotlinx", "kotlinx-coroutines-core").versionRef("kotlin-coroutines")'
                - 'library("kotlinx-coroutines-android", "org.jetbrains.kotlinx", "kotlinx-coroutines-android").versionRef("kotlin-coroutines")'

            - block: 'create("testLibs")'
              contents:
                - 'version("androidx-test", "1.6.1")'
                - 'library("androidx-test-runner", "androidx.test", "runner").versionRef("androidx-test")'
                - 'library("androidx-test-core", "androidx.test", "core").versionRef("androidx-test")'
                - 'library("androidx-test-rules", "androidx.test", "rules").versionRef("androidx-test")'

                - 'version("androidx-test-ext-junit", "1.2.1")'
                - 'library("androidx-test-ext-junit", "androidx.test.ext", "junit").versionRef("androidx-test-ext-junit")'

                - 'version("kotlin-coroutines-test", "1.10.2")'
                - 'library("kotlinx-coroutines-test", "org.jetbrains.kotlinx", "kotlinx-coroutines-test").versionRef("kotlin-coroutines-test")'

                - 'library("kotlin-test", "org.jetbrains.kotlin", "kotlin-test").withoutVersion()'
                - 'library("kotlin-test-junit", "org.jetbrains.kotlin", "kotlin-test-junit").withoutVersion()'

                - 'version("robolectric", "4.14.1")'
                - 'library("robolectric", "org.robolectric", "robolectric").versionRef("robolectric")'

# the blocks to add to the build.gradle.kts
build:
  contents:
    - block: 'plugins'
      contents:
        - 'alias(libs.plugins.kotlin.android)'
        - 'alias(libs.plugins.android.library)'
        - 'id("maven-publish")'

    - block: 'dependencies'
      contents:
        - 'api(platform(libs.kotlin.bom))'
        - 'compileOnly(testLibs.kotlin.test)'
        - 'compileOnly(testLibs.kotlin.test.junit)'
        - 'api(testLibs.androidx.test.runner)'
        - 'api(testLibs.kotlinx.coroutines.test)'
        - 'api(testLibs.kotlin.test.junit)'
        - 'testImplementation(testLibs.robolectric)'
        - 'testImplementation(testLibs.androidx.test.core)'
        - 'testImplementation(testLibs.androidx.test.rules)'
        - 'testImplementation(testLibs.androidx.test.ext.junit)'
        - 'androidTestImplementation(testLibs.androidx.test.core)'
        - 'androidTestImplementation(testLibs.androidx.test.rules)'
        - 'androidTestImplementation(testLibs.androidx.test.ext.junit)'

    - block: 'android'
      contents:
        - 'namespace = group as String'
        - 'compileSdk = libs.versions.android.sdk.compile.get().toInt()'
        - block: 'defaultConfig'
          contents:
            - 'minSdk = libs.versions.android.sdk.min.get().toInt()'
            - 'testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"'
        - block: 'compileOptions'
          contents:
            - 'sourceCompatibility = JavaVersion.toVersion(libs.versions.jvm.get())'
            - 'targetCompatibility = JavaVersion.toVersion(libs.versions.jvm.get())'
        - block: 'kotlinOptions'
          contents:
            - 'jvmTarget = libs.versions.jvm.get().toString()'

        - block: 'testOptions'
          contents:
            - block: 'unitTests'
              contents:
                - 'isIncludeAndroidResources = true'

        - block: 'publishing'
          contents:
            - block: 'multipleVariants'
              contents:
                - 'allVariants()'
                - 'withSourcesJar()'

    - block: 'tasks.withType<Test>().configureEach'
      contents:
        - 'systemProperties.put("robolectric.logging", "stdout")'
        - 'systemProperties.put("robolectric.graphicsMode", "NATIVE")'
        - block: 'testLogging'
          contents:
            - 'this.showStandardStreams = true'

    - block: 'tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinJvmCompile>()'
      contents:
        - block: 'compilerOptions'
          contents:
            # we suppress warnings due to a number of Skip constructs that the Kotlin compiler
            # doesn't like, such as unchecked casts and @Suppress("MUST_BE_INITIALIZED")
            - 'suppressWarnings = true'
            - 'jvmTargetValidationMode = org.jetbrains.kotlin.gradle.dsl.jvm.JvmTargetValidationMode.WARNING'
            - 'jvmTarget = org.jetbrains.kotlin.gradle.dsl.JvmTarget.fromTarget(libs.versions.jvm.get().toString())'

    - block: 'publishing'
      contents:
        - block: 'publications'
          contents:
            - block: 'register<MavenPublication>("default")'
              contents:
                - 'groupId = project.group.toString()'
                - 'artifactId = project.name'
                - 'version = project.version.toString()'
                - 'afterEvaluate { from(components["default"]) }'
